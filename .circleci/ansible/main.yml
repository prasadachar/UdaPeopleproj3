---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  gather_facts: false
  vars: # get env variables and add to remote server EC2
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    - ENVIRONMENT: "{{ lookup('env', 'ENVIRONMENT') }}"
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
    #- TYPEORM_MIGRATIONS: "./src/migrations/*.ts"
    - TYPEORM_MIGRATIONS_DIR: "./src/migrations"
    #- TYPEORM_CONNECTION: "postgres"
    #- TYPEORM_ENTITIES: "./src/modules/domain/**/*.entity.ts"
    - API_URL: "{{ lookup('env','API_URL') }}"

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:

  roles:
    - configure-prometheus-node-exporter
    - configure-server
    - deploy
